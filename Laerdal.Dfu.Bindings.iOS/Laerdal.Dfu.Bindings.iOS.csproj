<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net6.0-ios</TargetFramework>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <MtouchExtraArgs>-v -v -v -v</MtouchExtraArgs>

        <IsBindingProject>true</IsBindingProject>
        <DebugSymbols>true</DebugSymbols>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <PackOnBuild>true</PackOnBuild>
        <OutputType>Library</OutputType>

        <!-- warning CS0114: 'LegacyDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member 'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword. -->
        <!-- warning CS0114: 'SecureDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member 'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword. -->
        <NoWarn>CS0114</NoWarn>

        <LaerdalPackageName>Laerdal.Dfu.Bindings.iOS</LaerdalPackageName>
        <LaerdalPackageTags>Ble;Tools;Xamarin;Dfu;Bluetooth;Nordic;Semiconductor</LaerdalPackageTags>
        <LaerdalPackageCopyright>Fran√ßois Raminosona, Laerdal Medical</LaerdalPackageCopyright>
        <LaerdalPackageDescription>Xamarin wrapper around Nordic.Dfu for iOS.</LaerdalPackageDescription>
        <LaerdalRepositoryUrl>https://github.com/Laerdal/Laerdal.Dfu.Bindings.iOS</LaerdalRepositoryUrl>
    </PropertyGroup>

    <PropertyGroup>
        <RootNamespace>$(LaerdalPackageName)</RootNamespace>

        <PackageId>$(LaerdalPackageName)</PackageId>
        <PackageTags>$(LaerdalPackageTags)</PackageTags>
        <PackageDescription>$(LaerdalPackageDescription)</PackageDescription>
        <PackageProjectUrl>$(LaerdalRepositoryUrl)</PackageProjectUrl>
        <PackageVersion>0.0.1</PackageVersion>
        <PackageOutputPath Condition="'$(PackageOutputPath)' == ''">$([System.IO.Path]::Combine($(MSBuildThisFileDirectory), `../Output/`))</PackageOutputPath>
        <PackageIconPath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), `icon.png`))</PackageIconPath>
        <PackageLicencePath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), `../LICENSE`))</PackageLicencePath>
        <PackageReadMePath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), `../README.md`))</PackageReadMePath>
        <PackageIcon Condition="Exists('$(PackageIconPath)')">icon.png</PackageIcon>
        <PackageLicense Condition="Exists('$(PackageLicencePath)')">LICENSE</PackageLicense>
        <!-- https://github.com/NuGet/Home/issues/10791 -->
        <!-- <PackageReadmeFile Condition="Exists('$(PackageReadMePath)')">$(PackageReadMePath)</PackageReadmeFile> -->

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>$(LaerdalPackageName)</AssemblyName>

        <Title>$(LaerdalPackageName)</Title>
        <Summary>$(LaerdalPackageDescription)</Summary>
        <Description>$(LaerdalPackageDescription)</Description>
        <Authors>$(LaerdalPackageCopyright)</Authors>
        <Owners>$(LaerdalPackageCopyright)</Owners>
        <Copyright>$(LaerdalPackageCopyright)</Copyright>
        <RepositoryUrl>$(LaerdalRepositoryUrl)</RepositoryUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>
        <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    </PropertyGroup>
    
    <ItemGroup>
        <None Include="$(PackageIconPath)" Pack="true" PackagePath="\" Condition="Exists('$(PackageIconPath)')" />
        <None Include="$(PackageLicencePath)" Pack="true" PackagePath="\" Condition="Exists('$(PackageLicencePath)')" />
        <None Include="$(PackageReadMePath)" Pack="true" PackagePath="\" Condition="Exists('$(PackageReadMePath)')" />
    </ItemGroup>

    <ItemGroup>
        <ObjcBindingApiDefinition Include="ApiDefinition.cs" />
        <ObjcBindingCoreSource Include="StructsAndEnums.cs" />
    </ItemGroup>


    <Target Name="_DownloadIosNativeFiles" BeforeTargets="BeforeCompile" Condition="!Exists('Carthage\Carthage\Build\iOSDFULibrary.xcframework')">
        <WriteLinesToFile File="Carthage\Cartfile" Lines="github &quot;NordicSemiconductor/IOS-Pods-DFU-Library&quot; &quot;4.11.1&quot;" Overwrite="true" />
        <Exec WorkingDirectory="Carthage\" Command="carthage update --use-xcframeworks --platform iOS" />
    </Target>

    <ItemGroup>

        <!-- Frameworks\iOSDFULibrary.framework -->
        <NativeReference Include="Carthage\Carthage\Build\iOSDFULibrary.xcframework">
            <Kind>Framework</Kind>
            <SmartLink>False</SmartLink>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>

        <!-- Frameworks\ZIPFoundation.framework -->
        <NativeReference Include="Carthage\Carthage\Build\ZIPFoundation.xcframework">
            <Kind>Framework</Kind>
            <SmartLink>False</SmartLink>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>

    </ItemGroup>
</Project>
